plot_flight_path(flight_path)
# Example coordinates
deploy_coords <- c(352459.8,5274030.7)
land_coords <- c(352462.7,5273222.5)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 100,
H = 10,
crs_proj = "EPSG:32632",
minDist = 0.5
)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 100,
H = 10,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 100,
H = 80,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 100,
H = 50,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 20,
H = 50,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 200,
H = 50,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
plot_flight_map(flight_path)
# Visualize
plot_flight_path(flight_path)
export_flight_path(flight_path =  flight_path,
output_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/flight_path_bg.csv",
include_headers = TRUE,
speed = 2.1)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 200,
H = 100,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 200,
H = 150,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 200,
H = 20,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 200,
H = 80,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
plot_flight_map(flight_path)
# Visualize
plot_flight_path(flight_path)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 20,
H = 80,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
# Create flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = "/Users/ajcg93/Documents/6_PhD/9_SideQuests/SampleBGL/SMARTAGL_Rp.tif.aux.tif",
N = 30,
H = 80,
crs_proj = "EPSG:32633",
minDist = 0.5
)
# Visualize
plot_flight_path(flight_path)
################################################################################
# 1. Define coordinates ("EPSG:3763") and DSM path
deploy_coords <- c(-110289.7,-62576.0)
land_coords <- c(-110077.1,-62963.2)
dsm_path <- "/Users/ajcg93/Documents/6_PhD/9_SideQuests/DSM_R_S.tif"
# 2. Generate flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = dsm_path,
N = 50,
H = 80,
crs_proj = "EPSG:3763",
minDist = 0.5
)
library(SMARTAGL)
################################################################################
# 1. Define coordinates ("EPSG:3763") and DSM path
deploy_coords <- c(-110289.7,-62576.0)
land_coords <- c(-110077.1,-62963.2)
dsm_path <- "/Users/ajcg93/Documents/6_PhD/9_SideQuests/DSM_R_S.tif"
# 2. Generate flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = dsm_path,
N = 50,
H = 80,
crs_proj = "EPSG:3763",
minDist = 0.5
)
# 2. Generate flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = dsm_path,
N = 50,
H = 80,
crs_proj = "EPSG:32632",
minDist = 0.5
)
################################################################################
# 1. Define coordinates ("EPSG:3763") and DSM path
deploy_coords <- c(570557.22,5513717.66)
land_coords <- c(570509.62,5513791.53)
dsm_path <- "/Users/ajcg93/Documents/6_PhD/9_SideQuests/DSM_R_S.tif"
# 2. Generate flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = dsm_path,
N = 50,
H = 80,
crs_proj = "EPSG:32632",
minDist = 0.5
)
# 3. Visualize Profile
plot_flight_path(flight_path)
# 2. Generate flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = dsm_path,
N = 100,
H = 80,
crs_proj = "EPSG:32632",
minDist = 0.5
)
# 3. Visualize Profile
plot_flight_path(flight_path)
# 4. Visualize Map
plot_flight_map(flight_path)
# 4. Visualize Map
plot <- plot_flight_map(flight_path)
plot
################################################################################
make_calfig <- function(Lat, Lon, diam = 15, speed = 5, res = 10, H = 80) {
# Ensure resolution is at least 4
res <- max(res, 4)
# Calculate radius from diameter
radius <- diam / 2
# The given Lat/Lon is the intersection point, which is between the two circle centers
# The distance between centers is 2*radius (since circles intersect)
# Convert meters to degrees approximation (for small distances near the given coordinates)
# This is a simplified approximation - for more precision, use proper geodesic calculations
meters_to_deg <- 1 / 111320  # Approximate conversion at equator
# Calculate circle centers (north and south of the intersection point)
center1_lat <- Lat + radius * meters_to_deg
center1_lon <- Lon
center2_lat <- Lat - radius * meters_to_deg
center2_lon <- Lon
# Generate points for first circle (clockwise)
angles_cw <- seq(0, 2*pi, length.out = res + 1)[-(res + 1)]  # Drop last point to avoid duplicate
circle1 <- lapply(angles_cw, function(angle) {
lat <- center1_lat + radius * meters_to_deg * cos(angle)
lon <- center1_lon + radius * meters_to_deg * sin(angle)
c(lat, lon, speed, H)
})
# Generate points for second circle (counter-clockwise)
angles_ccw <- seq(2*pi, 0, length.out = res + 1)[-(res + 1)]  # Reverse order for CCW
circle2 <- lapply(angles_ccw, function(angle) {
lat <- center2_lat + radius * meters_to_deg * cos(angle)
lon <- center2_lon + radius * meters_to_deg * sin(angle)
c(lat, lon, speed, H)
})
# Combine both circles
points <- do.call(rbind, c(circle1, circle2))
colnames(points) <- c("Lat", "Lon", "speed", "H")
return(points)
}
# Example usage:
# points <- make_calfig(Lat = 570524.16, Lon = 5513700.11, diam = 15, speed = 5, res = 10, H = 80)
# plot(points[, "Lon"], points[, "Lat"], type = "b")
make_calfig(Lat=570524.16, Lon=5513700.11, diam=15, speed=5, res=10, H=80)
# Example usage:
points <- make_calfig(Lat = 570524.16, Lon = 5513700.11, diam = 15, speed = 5, res = 10, H = 80)
plot(points[, "Lon"], points[, "Lat"], type = "b")
# Example usage:
points <- make_calfig(Lat = 570524.16, Lon = 5513700.11, diam = 15, speed = 5, res = 20, H = 80)
plot(points[, "Lon"], points[, "Lat"], type = "b")
# Example usage:
points <- make_calfig(Lat = 570524.16, Lon = 5513700.11, diam = 15, speed = 5, res = 4, H = 80)
plot(points[, "Lon"], points[, "Lat"], type = "b")
################################################################################
make_calfig <- function(Lat, Lon, diam = 15, speed = 5, res = 10, H = 80) {
# Ensure resolution is at least 4
res <- max(res, 4)
# Calculate radius from diameter
radius <- diam / 2
# Convert meters to degrees approximation
meters_to_deg <- 1 / 111320
# Circle centers are offset by radius from intersection point
center1 <- c(Lat + radius * meters_to_deg, Lon)  # North center
center2 <- c(Lat - radius * meters_to_deg, Lon)  # South center
# Generate angles for first circle (clockwise, starting at intersection point)
angles_cw <- seq(pi/2, pi/2 + 2*pi, length.out = res + 1)[1:res]
# Generate first circle points (excluding the starting point which we'll add last)
circle1 <- t(sapply(angles_cw, function(angle) {
c(center1[1] + radius * meters_to_deg * cos(angle),
center1[2] + radius * meters_to_deg * sin(angle),
speed, H)
}))
# Generate angles for second circle (counter-clockwise, starting at intersection point)
angles_ccw <- seq(3*pi/2, 3*pi/2 - 2*pi, length.out = res + 1)[1:res]
# Generate second circle points (excluding the starting point which we'll add last)
circle2 <- t(sapply(angles_ccw, function(angle) {
c(center2[1] + radius * meters_to_deg * cos(angle),
center2[2] + radius * meters_to_deg * sin(angle),
speed, H)
}))
# Combine points:
# 1. Start at intersection
# 2. First circle (clockwise)
# 3. Back to intersection
# 4. Second circle (counter-clockwise)
# 5. End at intersection
points <- rbind(
c(Lat, Lon, speed, H),  # Starting point
circle1,                 # First circle
c(Lat, Lon, speed, H),  # Return to intersection
circle2,                 # Second circle
c(Lat, Lon, speed, H)   # Final point
)
colnames(points) <- c("Lat", "Lon", "speed", "H")
rownames(points) <- NULL
return(points)
}
# Example usage:
points <- make_calfig(Lat = 570524.16, Lon = 5513700.11, diam = 15, speed = 5, res = 4, H = 80)
plot(points[, "Lon"], points[, "Lat"], type = "b")
# Example usage:
points <- make_calfig(Lat = 570524.16, Lon = 5513700.11, diam = 15, speed = 5, res = 10, H = 80)
plot(points[, "Lon"], points[, "Lat"], type = "b")
################################################################################
make_calfig <- function(Lat, Lon, diam = 15, angle = 90, speed = 5, res = 10, H = 80) {
# Ensure resolution is at least 4
res <- max(res, 4)
# Calculate radius from diameter
radius <- diam / 2
# Convert meters to degrees approximation
meters_to_deg <- 1 / 111320
# Convert angle from degrees to radians
angle_rad <- angle * pi / 180
opposite_angle_rad <- (angle + 180) * pi / 180
# Calculate circle centers along the angle direction
center1 <- c(
Lat + radius * meters_to_deg * cos(angle_rad),
Lon + radius * meters_to_deg * sin(angle_rad)
)
center2 <- c(
Lat + radius * meters_to_deg * cos(opposite_angle_rad),
Lon + radius * meters_to_deg * sin(opposite_angle_rad)
)
# Generate points for first circle (clockwise)
angles_cw <- seq(angle_rad + pi, angle_rad - pi, length.out = res + 1)[1:res]
circle1 <- t(sapply(angles_cw, function(a) {
c(center1[1] + radius * meters_to_deg * cos(a),
center1[2] + radius * meters_to_deg * sin(a),
speed, H)
}))
# Generate points for second circle (counter-clockwise)
angles_ccw <- seq(opposite_angle_rad - pi, opposite_angle_rad + pi, length.out = res + 1)[1:res]
circle2 <- t(sapply(angles_ccw, function(a) {
c(center2[1] + radius * meters_to_deg * cos(a),
center2[2] + radius * meters_to_deg * sin(a),
speed, H)
}))
# Combine all points in the correct order:
# 1. Start at given point
# 2. First circle (clockwise)
# 3. Back to starting point
# 4. Second circle (counter-clockwise)
# 5. End at starting point
points <- rbind(
c(Lat, Lon, speed, H),  # Starting point
circle1,                # First circle
c(Lat, Lon, speed, H), # Return to start
circle2,               # Second circle
c(Lat, Lon, speed, H)  # Final point
)
colnames(points) <- c("Lat", "Lon", "speed", "H")
rownames(points) <- NULL
return(points)
}
# Example usage:
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 45)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
points(570524.16, 5513700.11, col = "red", pch = 19)
# Example usage:
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# Example usage:
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90, res = 4)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# Example usage:
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90, res = 100)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# Example usage:
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90, res = 6)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# Example usage:
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90, res = 8)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
flight_path
setwd("/Users/ajcg93/Documents/6_PhD/9_SideQuests/SMARTAGL/")
library(roxygen2)
library(devtools)
document()
install.packages(c("pkgload", "devtools", "roxygen2"))
install.packages(c("pkgload", "devtools", "roxygen2"))
setwd("/Users/ajcg93/Documents/6_PhD/9_SideQuests/SMARTAGL/")
library(roxygen2)
library(devtools)
document()
library(SMARTAGL)
# Example usage:
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90, res = 8)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
setwd("/Users/ajcg93/Documents/6_PhD/9_SideQuests/SMARTAGL/")
library(roxygen2)
library(devtools)
document()
library(SMARTAGL)
?SMARTAGL::plot_flight_map()
setwd("/Users/ajcg93/Documents/6_PhD/9_SideQuests/SMARTAGL/")
library(roxygen2)
library(devtools)
document()
library(SMARTAGL)
?SMARTAGL::create_flight_path()
setwd("/Users/ajcg93/Documents/6_PhD/9_SideQuests/SMARTAGL/")
library(roxygen2)
library(devtools)
document()
?SMARTAGL::export_flight_path
# Example usage:
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90, res = 8)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# 2. Generate flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = dsm_path,
N = 100,
H = 80,
crs_proj = "EPSG:32632",
minDist = 0.5
)
################################################################################
# 1. Define coordinates ("EPSG:3763") and DSM path
deploy_coords <- c(570557.22,5513717.66)
land_coords <- c(570509.62,5513791.53)
dsm_path <- "/Users/ajcg93/Documents/6_PhD/9_SideQuests/DSM_R_S.tif"
# 2. Generate flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = dsm_path,
N = 100,
H = 80,
crs_proj = "EPSG:32632",
minDist = 0.5
)
# 3. Visualize Profile
plot_flight_path(flight_path)
# 4. Visualize Map
plot <- plot_flight_map(flight_path)
plot
flight_path
################################################################################
# Install from GitHub
if (!require("devtools")) install.packages("devtools")
devtools::install_github("ajcastanedag/SMARTAGL")
# Load package
library(SMARTAGL)
################################################################################
# 1. Define coordinates ("EPSG:3763") and DSM path
deploy_coords <- c(570557.22,5513717.66)
land_coords <- c(570509.62,5513791.53)
dsm_path <- "/Users/ajcg93/Documents/6_PhD/9_SideQuests/DSM_R_S.tif"
# 2. Generate flight path
flight_path <- create_flight_path(
deploy_coords = deploy_coords,
land_coords = land_coords,
dsm_path = dsm_path,
N = 100,
H = 80,
crs_proj = "EPSG:32632",
minDist = 0.5
)
# 3. Visualize Profile
plot_flight_path(flight_path)
# 4. Add cal figures to coord list
make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90, res = 8)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# 4. Add cal figures to coord list
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90, res = 8)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# 4. Add cal figures to coord list
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 90, res = 12)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# 4. Add cal figures to coord list
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 45, res = 12)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# 4. Add cal figures to coord list
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 20, res = 12)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# 4. Add cal figures to coord list
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 2, res = 12)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
# 4. Add cal figures to coord list
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 0, res = 12)
# 4. Add cal figures to coord list
calfig <- make_calfig(Lat = 570524.16, Lon = 5513700.11, angle = 83, res = 12)
plot(calfig[, "Lon"], calfig[, "Lat"], type = "b", asp = 1)
